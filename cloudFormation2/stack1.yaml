# Infrastructure as Code 
# Exercise solution
# Carlos Rivas February 2021

AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the required network infrastructure for Public and Private routing with Internet access

Parameters:
  VPCCIDR:
    Type: String
  PrivSubnet1CIDR:
    Type: String
  PrivSubnet2CIDR:
    Type: String
  PubSubnet1CIDR:
    Type: String
  PubSubnet2CIDR:
    Type: String
  EnvironmentName:
    Type: String

Resources:
  MainVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      Tags: 
        - Key: Name
          Value: "Udacity VPC"

  InternetGW:
    Type: AWS::EC2::InternetGateway

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGW

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      # Availability zone at your discretion or
      # as a parameter
      AvailabilityZone: 'us-west-2a'
      CidrBlock: !Ref PubSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: "Public Subnet AZ1"
      VpcId: !Ref MainVPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      # Availability zone at your discretion or
      # as a parameter
      AvailabilityZone: 'us-west-2b'
      CidrBlock: !Ref PubSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: "Public Subnet AZ1"
      VpcId: !Ref MainVPC

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: 'us-west-2a'
      CidrBlock: !Ref PrivSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: "Private Subnet AZ1"
      VpcId: !Ref MainVPC

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: 'us-west-2b'
      CidrBlock: !Ref PrivSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: "Private Subnet AZ1"
      VpcId: !Ref MainVPC


  EIP1:
    Type: AWS::EC2::EIP
    DependsOn: AttachInternetGateway
    Properties:
        Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  EIP2:
    Type: AWS::EC2::EIP
    DependsOn: AttachInternetGateway
    Properties:
        Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  NAT1:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt EIP1.AllocationId
        SubnetId: !Ref PublicSubnet1
        Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  # NAT2:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #       AllocationId: !GetAtt EIP2.AllocationId
  #       SubnetId: !Ref PublicSubnet2
  #       Tags:
  #       - Key: Name
  #         Value: !Ref EnvironmentName

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes
      VpcId: !Ref MainVPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes
      VpcId: !Ref MainVPC

  AssociatePUBRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  AssociatePRIVRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref InternetGW

  PrivateInternetOutboundRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref PrivateRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref NAT1

  # Private2InternetOutboundRoute:
  #   Type: AWS::EC2::Route
  #   Properties:
  #      RouteTableId: !Ref PrivateRouteTable
  #      DestinationCidrBlock: 0.0.0.0/0
  #      NatGatewayId: !Ref NAT2

Outputs:
  VPC:
    Value: !Ref MainVPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCid

  PublicSubnets:
    Description: Variable which holds list of subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NETS

  PrivateSubnets:
    Description: Variable which holds list of subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-PRV-NETS